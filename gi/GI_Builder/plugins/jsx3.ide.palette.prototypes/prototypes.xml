<?xml version="1.0" ?>
<!--
  ~ Copyright (c) 2001-2009, TIBCO Software Inc.
  ~ Use, modification, and distribution subject to terms of license.
  -->
<serialization xmlns="urn:tibco.com/v3.0">
  <onAfterDeserialize><![CDATA[

objJSX._firsttime = false;

objJSX.onPaletteLoaded = function() {
  this.onEditorChanged(jsx3.ide.getActiveEditor(), null);

  var mm = new jsx3.amp.util.MenuManager();
  mm.addMenuBar("/", menuBar);
  this.getPlugIn().getExtPoint("ctxmenu").processExts().each(function(e) { mm.addMenu(e); });
  this.getPlugIn().getExtPoint("ctxmenu-item").processExts().each(function(e) { mm.addItem(e); });
  mm.finishInit();

  var compBarMgr = new jsx3.amp.util.ToolbarManager(jsx_ide_complibs_bar);
  compBarMgr.addSection("utils");
  compBarMgr.addSection("additions", true);
  this.getPlugIn().getExtPoint("toolbar").processExts().each(function(e) { compBarMgr.addItem(e); });
};

objJSX.onPrototypesReloaded = function() {
  ide_component_libs_tree.repaint();
};

objJSX.onEditorChanged = function(newEditor, oldEditor) {
  var onBefore = oldEditor && oldEditor.getMode() == "component";
  var onNow = newEditor && newEditor.getMode() == "component";

  if (onBefore != onNow) {
    jsx3.sleep(jsx3.$F(this._onEditorChangedSleep).bind(this, [onNow]), "jsx3.ide.palette.componentlibs", this, true);
  }
};

objJSX._onEditorChangedSleep = function(onNow) {
  if (onNow) {
    if (!objJSX._firsttime) {
      objJSX._firsttime = true;
      var p = this.getPlugIn();
      jsx3.ide._addJob(jsx3.$F(p.reloadPrototypeLibraries).bind(p, [ide_component_libs_tree]));
    }

    ide_component_libs_tree.setDisplay(jsx3.gui.Block.DISPLAYBLOCK, true);
    this._setButtonsEnabled(jsx3.gui.Form.STATEENABLED);
  } else {
    ide_component_libs_tree.setDisplay(jsx3.gui.Block.DISPLAYNONE, true);
    this._setButtonsEnabled(jsx3.gui.Form.STATEDISABLED);
  }
};

objJSX._setButtonsEnabled = function(enabled) {
  var buttons = jsx_ide_complibs_bar.getDescendantsOfType(jsx3.gui.ToolbarButton);
  for (var i = 0; i < buttons.length; i++) {
    buttons[i].setEnabled(enabled, true);
  }
};

objJSX._onChange = function(v) {
  this.getPlugIn().publish({subject:"selection", value:v});
};

objJSX.getTree = function() {
  return ide_component_libs_tree;
};

  ]]></onAfterDeserialize>
  <object type="jsx3.gui.Block">
    <variants jsxleft="0" jsxtop="0" jsxoverflow="2"/>
    <strings jsxname="jsx_ide_palette_complibs" jsxwidth="100%" jsxheight="100%" jsxhelpid="ide.palette.complibs"/>
    <object type="jsx3.gui.Block">
      <variants/>
      <strings jsxname="menuBar" jsxdisplay="none"/>
    </object>
    <object type="jsx3.gui.TabbedPane">
      <variants selectedIndex="2" jsxselectedindex="1"/>
      <strings jsxname="tabbedpane" jsxtextalign="0"/>
      <object type="jsx3.gui.Tab">
        <variants jsxzindex="3" jsxheight="18"/>
        <strings jsxname="components_tab" jsxtext="Components" jsxbgcolor="#d8d8e5"/>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="2" jsxrelativeposition="0" jsxleft="0" jsxtop="0" jsxloadtype="4"/>
          <strings jsxname="pane" jsxwidth="100%" jsxheight="100%" jsxdisplay="none" jsxvisibility=""/>
          <dynamics jsxbgcolor="@Solid Medium"/>
          <object type="jsx3.gui.LayoutGrid">
            <variants jsxrelativeposition="0" jsxoverflow="2"/>
            <strings jsxname="jsx_ide_cache_layout" jsxrows="26,*" jsxwidth="100%" jsxheight="100%"/>
            <object type="jsx3.gui.WindowBar">
              <variants jsxfontsize="10" jsxbartype="2" jsxoverflow="3" jsxrelativeposition="1"/>
              <strings jsxname="jsx_ide_complibs_bar"/>
              <dynamics jsxbgcolor="@Solid Medium" jsxborder="@Outset"/>
            </object>
            <object type="jsx3.gui.Block">
              <variants jsxleft="0" jsxtop="0" jsxoverflow="1"/>
              <strings jsxname="jsx_ide_comps_treeblock" jsxwidth="100%" jsxheight="100%"/>
              <dynamics jsxborder="@Outset" jsxbgcolor="@Solid Light"/>
              <object type="jsx3.gui.Tree">
                <variants jsxuseroot="0" jsxdrag="1"/>
                <strings jsxname="ide_component_libs_tree" jsxmenu="jsx3.ide.prototypesctx" jsxwidth="100%" jsxheight="100%" jsxdisplay="none"/>
                <dynamics jsxpadding="@Tree Padding" jsxbgcolor="@Solid Light"/>
                <events jsxdrag="if(objHW = jsx3.gui.Heavyweight.GO(&quot;jsxfocusrectangle&quot;)) objHW.destroy();" jsxadopt="false" jsxdata="jsx_ide_palette_complibs.getPlugIn().doPLDirData(this,objNODE);" jsxchange="jsx_ide_palette_complibs._onChange(this.getValue());"/>
                <xslparameters jsxsortpath="sorton" jsxindent="16" jsx_img_resolve="0"/>
              </object>
            </object>
          </object>
        </object>
      </object>
      <object type="jsx3.gui.Tab">
        <variants jsxzindex="3" jsxheight="18"/>
        <strings jsxname="prototypes_tab" jsxtext="Prototypes" jsxbgcolor="#e8e8f5"/>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="2" jsxrelativeposition="0" jsxleft="0" jsxtop="0" jsxloadtype="4"/>
          <strings jsxname="pane" jsxwidth="100%" jsxheight="100%" jsxdisplay="" jsxvisibility=""/>
          <dynamics jsxbgcolor="@Solid Medium"/>
          <object type="jsx3.gui.LayoutGrid">
            <variants jsxrelativeposition="0" jsxleft="0" jsxtop="0" jsxoverflow="2"/>
            <strings jsxname="jsx_ide_prototypes_layout" jsxrows="26,26,*" jsxwidth="100%" jsxheight="100%"/>
            <object type="jsx3.gui.WindowBar">
              <variants jsxbartype="2" jsxfontsize="10" jsxrelativeposition="1" jsxoverflow="3"/>
              <strings jsxname="jsx_ide_protolibs_bar" jsxdisplay=""/>
              <dynamics jsxbgcolor="@Solid Medium" jsxborder="@Outset"/>
              <object type="jsx3.gui.LayoutGrid">
                <variants jsxrelativeposition="0" jsxleft="0" jsxtop="0" jsxoverflow="2"/>
                <strings jsxname="layoutCols" jsxcols="*,31,31" jsxwidth="100%" jsxheight="100%"/>
                <object type="jsx3.gui.Block">
                  <variants jsxoverflow="2"/>
                  <strings jsxname="pane1" jsxwidth="100%" jsxheight="100%" jsxmargin="3 0 0 0"/>
                  <object type="jsx3.gui.TextBox">
                    <variants jsxheight="18"/>
                    <strings jsxname="textbox" jsxmargin="0 4 0 0" jsxvalue=""/>
                  </object>
                </object>
                <object type="jsx3.gui.Block">
                  <variants jsxoverflow="3"/>
                  <strings jsxname="block" jsxwidth="100%" jsxheight="100%" jsxrelativeposition="1"/>
                  <object type="jsx3.gui.ToolbarButton">
                    <variants jsxdivider="1"/>
                    <strings jsxname="toolBarBtn" jsximage="jsxapp:/images/icon_2.gif" jsxtip="RSS"/>
                    <events jsxexecute="window.alert('RSS');"/>
                  </object>
                </object>
                <object type="jsx3.gui.Block">
                  <variants jsxoverflow="3"/>
                  <strings jsxname="block" jsxwidth="100%" jsxheight="100%" jsxrelativeposition="1"/>
                  <object type="jsx3.gui.ToolbarButton">
                    <variants jsxdivider="1"/>
                    <strings jsxname="toolBarBtn" jsximage="jsxapp:/images/icon_15.gif" jsxtip="Refresh the list of prototypes"/>
                    <events jsxexecute="window.alert('Refresh prototypes');"/>
                  </object>
                </object>
              </object>
            </object>
            <object type="jsx3.gui.Block">
              <variants jsxoverflow="1"/>
              <strings jsxname="jsx_ide_protolibs_bar2" jsxwidth="100%" jsxheight="100%" jsxrelativeposition="1" jsxbgcolor=""/>
              <dynamics jsxbg="@Fade TopDown"/>
              <object type="jsx3.gui.LayoutGrid">
                <variants jsxrelativeposition="0" jsxleft="0" jsxtop="0" jsxoverflow="2"/>
                <strings jsxname="layoutCols" jsxcols="*,100,25" jsxwidth="100%" jsxheight="100%"/>
                <object type="jsx3.gui.Block">
                  <variants jsxoverflow="2"/>
                  <strings jsxname="pane1" jsxwidth="100%" jsxheight="100%"/>
                  <object type="jsx3.gui.Menu">
                    <variants jsxtype="0" jsxstate="0" jsxshare="1" />
                    <strings jsxname="jsx_ide_protos_filter_menu" jsxtip="menu" jsxtext="All Ratings" jsxxmlid="jsx3.ide.palette.prototypes.menu-filters" />
                  </object>
                </object>
                <object type="jsx3.gui.Block">
                  <variants jsxoverflow="1"/>
                  <strings jsxname="pane2" jsxwidth="100%" jsxheight="100%"/>
                  <object type="jsx3.gui.Menu">
                    <variants jsxxmlasync="1"/>
                    <strings jsxname="menu" jsxtip="menu" jsxtext="Sort by Rating" jsxxml="&lt;data jsxid=&quot;jsxroot&quot;&gt;  &lt;record jsxid=&quot;1&quot; jsxtext=&quot;Rating&quot;/&gt;  &lt;record jsxid=&quot;2&quot; jsxtext=&quot;Name&quot;/&gt; &lt;/data&gt;"/>
                  </object>
                </object>
                <object type="jsx3.gui.Image">
                  <variants jsxoverflow="2" jsxrelativeposition="1" jsxleft="0" jsxtop="0"/>
                  <strings jsxname="image" jsxsrc="jsx:/images/menu/scroll_down.gif" jsxdisplay="" jsxtextalign="center" jsxpadding="10 0 0 0" jsxtip="Sort descending"/>
                </object>
              </object>
            </object>
            <object type="jsx3.gui.Block">
              <variants jsxoverflow="1"/>
              <strings jsxname="jsx_ide_protos_treeblock" jsxwidth="100%" jsxheight="100%"/>
              <dynamics jsxborder="@Outset" jsxbgcolor="@Solid Light"/>
              <object type="jsx3.gui.Tree">
                <variants jsxuseroot="0" jsxdrag="1"/>
                <strings jsxname="ide_prototype_libs_tree" jsxmenu="jsx3.ide.prototypesctx" jsxwidth="100%" jsxheight="100%" jsxdisplay="none"/>
                <dynamics jsxpadding="@Tree Padding" jsxbgcolor="@Solid Light"/>
                <events jsxdrag="if(objHW = jsx3.gui.Heavyweight.GO(&quot;jsxfocusrectangle&quot;)) objHW.destroy();" jsxadopt="false" jsxdata="jsx_ide_palette_complibs.getPlugIn().doPLDirData(this,objNODE);" jsxchange="jsx_ide_palette_complibs._onChange(this.getValue());"/>
                <xslparameters jsxsortpath="sorton" jsxindent="16" jsx_img_resolve="0"/>
              </object>
            </object>
          </object>
        </object>
      </object>
    </object>
  </object>
</serialization>
