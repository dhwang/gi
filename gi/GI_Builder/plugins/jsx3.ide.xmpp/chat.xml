<!--
  ~ Copyright (c) 2001-2009, TIBCO Software Inc.
  ~ Use, modification, and distribution subject to terms of license.
  -->
<serialization xmlns="urn:tibco.com/v3.0">
  <onAfterDeserialize><![CDATA[
objJSX.initializeTitle = function(buddy) {
  windowBar.setText(buddy.name||buddy.jid, true);
  this.contactName = buddy.name||buddy.jid;

  jsxconversationarea.removeChildren();

  var df = jsx3.util.DateFormat;

  this.date_format = df.getDateTimeInstance(df.SHORT, df.SHORT);
};
objJSX.onNewMessage = function(instance, msg) {
  if (!this.chatInstance || this.chatInstance.chatid != instance.chatid) {
    this.chatInstance = instance;
  }
  if (msg) {
    this.displayMessage(msg);
  }
};
objJSX.displayMessage = function(msg) {
  var cameIn = new Date();

  var newMessage = new jsx3.gui.Block('jsxmessage-'+(msg.from||this.contactName)+String(cameIn.valueOf()),
                                      null, null, "100%");

  var who = new jsx3.gui.Block(null, null, null, "25%", "100%", msg.from ? this.contactName : 'me');
  who.setFontWeight(jsx3.gui.Block.FONTBOLD);

  var what = new jsx3.gui.Block(null, null, null, "50%", "100%", msg.body);
  var when = new jsx3.gui.Block(null, null, null, "25%", "100%", this.date_format.format(cameIn));

  newMessage.setChild(who).setChild(what).setChild(when);

  jsxconversationarea.setChild(newMessage).repaint();
};
objJSX.sendMessage = function(evt) {
  if (evt) {
    if (!evt.enterKey() || evt.shiftKey()) {
      return;
    }
    evt.cancelKey();
    evt.cancelReturn();
    evt.cancelBubble();
  }
  try {
    var txt = jsxchatarea.getValue();
    txt = txt.replace(/\n/g, '<br/>');
    this.chatInstance.sendMessage({ body: txt });
    this.displayMessage({ body: txt });
    jsxchatarea.setValue('', true);
  } catch(e) {}
};
  ]]></onAfterDeserialize>
  <object type="jsx3.gui.Dialog">
    <variants jsxwidth="431" jsxheight="318" jsxzindex="5009" jsxwindowstate="1" jsxleft="70" jsxtop="26"/>
    <strings jsxname="jsx_chat_dialog"/>
    <dynamics jsxbgcolor="@Solid Medium"/>
    <object type="jsx3.gui.WindowBar">
      <variants/>
      <strings jsxname="windowBar" jsxtext="[Caption]"/>
      <object type="jsx3.gui.ToolbarButton">
        <variants/>
        <strings jsxname="btnMinimize"/>
        <dynamics jsximage="@Min Icon" jsxtip="jsx3.gui.Dialog.min"/>
        <events jsxexecute="this.getAncestorOfType(jsx3.gui.Dialog).doToggleState();"/>
      </object>
      <object type="jsx3.gui.ToolbarButton">
        <variants/>
        <strings jsxname="btnMaximize"/>
        <dynamics jsximage="@Max Icon" jsxtip="jsx3.gui.Dialog.max"/>
        <events jsxexecute="this.getAncestorOfType(jsx3.gui.Dialog).doMaximize(this);"/>
      </object>
      <object type="jsx3.gui.ToolbarButton">
        <variants/>
        <strings jsxname="btnClose"/>
        <dynamics jsximage="@Close Icon" jsxtip="jsx3.gui.Dialog.close"/>
        <events jsxexecute="this.getAncestorOfType(jsx3.gui.Dialog).doClose();"/>
      </object>
    </object>
    <object type="jsx3.gui.Block">
      <variants jsxoverflow="3" jsxloadtype="1"/>
      <strings jsxname="block" jsxwidth="100%" jsxheight="100%" jsxrelativeposition="1"/>
      <object type="jsx3.gui.Splitter">
        <variants jsxorientation="1" jsxleft="0" jsxtop="0"/>
        <strings jsxname="splitterH" jsxsubcontainer1pct="56.02836879432624%"/>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="1"/>
          <strings jsxname="paneTop" jsxwidth="100%" jsxheight="100%"/>
          <dynamics jsxborder="@Inset" jsxpadding="@8Pixel"/>
          <object type="jsx3.gui.Block">
            <variants jsxoverflow="1"/>
            <strings jsxname="jsxconversationarea" jsxwidth="100%" jsxheight="100%" jsxrelativeposition="1"/>
            <dynamics jsxbgcolor="@Solid Light"/>
          </object>
        </object>
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="3"/>
          <strings jsxname="paneBottom" jsxwidth="100%" jsxheight="100%"/>
          <dynamics jsxborder="@Inset" jsxpadding="@8Pixel"/>
          <object type="jsx3.gui.LayoutGrid">
            <variants jsxrelativeposition="0" jsxleft="0" jsxtop="0" jsxoverflow="2"/>
            <strings jsxname="layoutRows" jsxrows="*,18" jsxwidth="100%" jsxheight="100%"/>
            <object type="jsx3.gui.Block">
              <variants jsxoverflow="2"/>
              <strings jsxname="pane1" jsxwidth="100%" jsxheight="100%" jsxpadding="0 0 8 0"/>
              <object type="jsx3.gui.TextBox">
                <variants jsxtype="1" jsxenabled="1"/>
                <strings jsxwidth="100%" jsxheight="100%" jsxname="jsxchatarea" jsxmargin="0 0 0 0" jsxvalue=""/>
                <events jsxkeypress="jsx_chat_dialog.sendMessage(objEVENT);"/>
              </object>
            </object>
            <object type="jsx3.gui.Block">
              <variants jsxoverflow="1"/>
              <strings jsxname="pane2" jsxwidth="100%" jsxheight="100%" jsxtextalign="right" jsxfontweight="bold"/>
              <object type="jsx3.gui.Button">
                <variants jsxindex="0" jsxheight="18"/>
                <strings jsxname="jsxsend" jsxtext="Send" jsxtextalign="left"/>
                <events jsxexecute="jsx_chat_dialog.sendMessage();"/>
              </object>
            </object>
          </object>
        </object>
      </object>
    </object>
  </object>
</serialization>
