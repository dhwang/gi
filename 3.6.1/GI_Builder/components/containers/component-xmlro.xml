<?xml version="1.0" ?>
<!--
  ~ Copyright (c) 2001-2008, TIBCO Software Inc.
  ~ Use, modification, and distribution subject to terms of license.
  -->
<serialization xmlns="urn:tibco.com/v3.0">
  <name><![CDATA[]]></name>
  <icon><![CDATA[]]></icon>
  <description><![CDATA[]]></description>
  <onBeforeDeserialize><![CDATA[]]></onBeforeDeserialize>
  <onAfterDeserialize><![CDATA[


objJSX.onShowMe = function() {
  var editor = jsx3.ide.getActiveEditor();
  var tab = editor.getTab();
  var firstChild = editor.getServer().getRootObjects()[0];
  var profileProps = {};

  //get profile info about the component being edited
  var profileTab = tab.getDescendantOfName(jsx3.ide.ComponentEditor.MODE_TO_NAME['profile'].name, false, false);
  if (profileTab != null) {
    //the profile tab is open; use its values as the most current version
    profileProps = profileTab.getProfileProperties();
  } else if (firstChild) {
    //profile tab isn't open, but the first child of the body exists, so read from it
    profileProps = this.readFromJSX(firstChild);
  }

  //set 'prettified' content
  var root = editor.getServer().getBodyBlock();

  if (root.getChild(0) == null) profileProps.children = true;
  this.getDescendantOfName('component_asxml_content').setText(root != null ?
      this.makePretty((root.getChild(0) || root).toXMLDoc(profileProps)).toString() : "", true);
};


objJSX.readFromJSX = function(obj) {
  //reads the profile properties of the JSX GUI object, '@obj', and returns as a hash
  var objP = {};
  objP.icon = obj.getMetaValue('icon');
  objP.name = obj.getMetaValue('name');
  objP.description = obj.getMetaValue('description');
  objP.onafter = obj.getMetaValue('onafter');
  objP.onbefore = obj.getMetaValue('onbefore');
  objP.unicode = obj.getMetaValue('unicode');
  return objP;
};

objJSX.makePretty = function(doc) {
  if (! doc.hasError()) {
	  var blockX = this.getDescendantOfName('contentx');
    blockX.setSourceXML(doc);
    return blockX.doTransform();
  } else {
    var e = doc.getError();
    jsx3.ERROR.doLog("CMPT02", "xml error: " + e.code + " " + e.description, 5, false);
    return "<pre>" + jsx3.util.strEscapeHTML(doc.getError()) + "</pre>";
  }
};


 ]]></onAfterDeserialize>
    <object type="jsx3.gui.Tab">
      <variants jsxindex="0" />
      <strings jsxname="component_asxml" jsxhelpid="ide.editor.component.xmlro"/>
      <events jsxshow="this.onShowMe();" />
        <object type="jsx3.gui.Block">
          <variants jsxoverflow="2" jsxrelativeposition="0" />
          <strings jsxname="bordertop" jsxwidth="100%" jsxheight="100%" jsxbgcolor="#ffffff" jsxborder="inset 1px;0px;0px;0px" />
            <object type="jsx3.gui.Block">
              <variants jsxoverflow="1" jsxrelativeposition="0" jsxfontsize="11" />
              <strings jsxname="component_asxml_content" jsxwidth="100%" jsxheight="100%" jsxpadding="4" />
            </object>
            <object type="jsx3.gui.BlockX">
              <variants jsxoverflow="2" jsxrelativeposition="0" jsxfontsize="11" />
              <strings jsxname="contentx" jsxwidth="100%" jsxheight="100%" jsxdisplay="none" jsxxslid="jsx:///xsl/xml.xsl" jsxxslurl="jsx:///xsl/xml.xsl" />
            </object>
        </object>
    </object>
</serialization>
