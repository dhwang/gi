<serialization xmlns="urn:tibco.com/v3.0" jsxversion="3.9">
  <properties xmlns="">
    <data jsxid="jsxroot">
      <record jsxid="type" jsxtext="Chart Type"
          jsxtip="Sets the type of line chart."
          docgetter="getType" docsetter="setType"
          docdefault="overlay (&lt;code&gt;jsx3.chart.LineChart.TYPE_OVERLAY&lt;/code&gt;)"
          eval="0" nullable="0"
          jsxmask="jsxselect"
          jsxexecute="objJSX.setType(vntValue); objJSX.repaint()">
        <enum jsxid="jsx3.chart.LineChart.TYPE_OVERLAY" jsxtext="Overlay"/>
        <enum jsxid="jsx3.chart.LineChart.TYPE_STACKED" jsxtext="Stacked"/>
        <enum jsxid="jsx3.chart.LineChart.TYPE_STACKED100" jsxtext="Stacked 100%"/>
      </record>
      <record jsxid="form" jsxtext="Series Type"
          jsxtip="Sets the method for connecting the line between data points."
          docgetter="getForm" docsetter="setForm"
          docdefault="segment (&lt;code&gt;jsx3.chart.LineSeries.FORM_SEGMENT&lt;/code&gt;)"
          eval="0" nullable="0"
          jsxmask="jsxselect"
          jsxtarget="series1">
        <enum jsxid="jsx3.chart.LineSeries.FORM_SEGMENT" jsxtext="Segment"/>
        <enum jsxid="jsx3.chart.LineSeries.FORM_STEP" jsxtext="Step"/>
        <enum jsxid="jsx3.chart.LineSeries.FORM_REVSTEP" jsxtext="ReverseStep"/>
        <enum jsxid="jsx3.chart.LineSeries.FORM_HORIZONTAL" jsxtext="Horizontal"/>
        <enum jsxid="jsx3.chart.LineSeries.FORM_VERTICAL" jsxtext="Vertical"/>
      </record>
      <record jsxid="pointRenderer" jsxtext="Point Renderer"
          eval="0"
          jsxtip="Sets the renderer to use for rendering points in this series.  Built-in renderers are fields in &lt;code&gt;jsx3.chart.PointRenderer&lt;/code&gt;. If empty, points aren't rendered."
          docgetter="getPointRenderer" docsetter="setPointRenderer"
          jsxmask="jsxselect"
          jsxtype="jsxchartrenderer"
          jsxexecute="objJSX.setPointRenderer(vntValue); objJSX.repaint(); objJSX.getChart().repaintParts(jsx3.chart.Chart.PART_LEGEND);"
          jsxtarget="series1">
        <enum jsxid="jsx3.chart.PointRenderer.CIRCLE" eval="0" jsxtext="Circle"/>
        <enum jsxid="jsx3.chart.PointRenderer.CROSS" eval="0" jsxtext="Cross"/>
        <enum jsxid="jsx3.chart.PointRenderer.DIAMOND" eval="0" jsxtext="Diamond"/>
        <enum jsxid="jsx3.chart.PointRenderer.BOX" eval="0" jsxtext="Box"/>
        <enum jsxid="jsx3.chart.PointRenderer.TRIANGLE" eval="0" jsxtext="Triangle"/>
      </record>
      <record jsxid="pointRadius" jsxtext="Point Radius"
          jsxtip="Sets the radius of points in this series."
          docgetter="getPointRadius" docsetter="setPointRadius"
          docdefault="&lt;code&gt;4&lt;/code&gt;"
          eval="1"
          jsxmask="jsxtext"
          jsxtarget="series1"/>
      <record jsxid="pointFill" jsxtext="Point Fill"
          jsxtip="Sets the vector fill for points in this series. Specified as &lt;i&gt;color alpha&lt;/i&gt;. For example, &lt;code&gt;black 1&lt;/code&gt;."
          docgetter="getPointFill" docsetter="setPointFill"
          docdefault="Default color scheme"
          eval="0"
          jsxmask="jsxtext"
          jsxexecute="objJSX.pointFill = vntValue; objJSX.repaint(); objJSX.getChart().repaintParts(jsx3.chart.Chart.PART_LEGEND);"
          jsxtarget="series1"/>
      <record jsxid="pointStroke" jsxtext="Point Stroke"
          jsxtip="Sets the vector stroke for points in this series. Specified as &lt;i&gt;color width alpha&lt;/i&gt;. For example, &lt;code&gt;black 1 1&lt;/code&gt;."
          docgetter="getPointStroke" docsetter="setPointStroke"
          docdefault="Default color scheme"
          eval="0"
          jsxmask="jsxtext"
          jsxexecute="objJSX.pointStroke = vntValue; objJSX.repaint(); objJSX.getChart().repaintParts(jsx3.chart.Chart.PART_LEGEND);"
          jsxtarget="series1"/>
      <record jsxid="pointGradient" jsxtext="Point Gradient"
          eval="0"
          jsxmask="jsxtext"
          jsxtip="Sets the optional gradient settings for points in this series. Specified as &lt;i&gt;color2 [angle [alpha2 [percent stop_color,]*]]&lt;/i&gt;. The gradient is rendered starting from the main fill color/fill alpha and ending at color2/alpha2 along the specified angle. The angle is measured in degrees counter-clockwise from 12 o'clock. Optional intermediate colors along the way are defined by percent and stop_color pairs. Pairs are separated by commas. For example, &lt;code&gt;red 0 1 50% white, 75% black&lt;/code&gt;."
          docgetter="getPointGradient" docsetter="setPointGradient"
          docdefault="Empty"
          jsxexecute="objJSX.pointGradient = vntValue; objJSX.repaint(); objJSX.getChart().repaintParts(jsx3.chart.Chart.PART_LEGEND);"
          jsxtarget="series1"/>
    </data>
  </properties>
  <object type="jsx3.gui.Block">
    <variants jsxoverflow="1" jsxrelativeposition="0" jsxleft="8" jsxtop="8"/>
    <strings jsxname="demo_linechartplain" jsxwidth="100%" jsxheight="100%" jsxdisplay=""/>
    <object type="jsx3.chart.LineChart">
      <variants jsxleft="0" jsxtop="0" jsxwidth="400" jsxheight="300" borderWidth="1" borderAlpha="1" alpha="1" jsxrelativeposition="1" loadState="1"/>
      <strings jsxname="target" titlePlacement="top" legendPlacement="right" dataPadding="14 10 6 6" borderColor="#999999" type="overlay" jsxbgcolor="#FFFFFF" jsxxml="&lt;data jsxid=&quot;jsxroot&quot;&gt;&lt;record x1=&quot;70&quot; x2=&quot;10&quot;/&gt;&lt;record x1=&quot;30&quot; x2=&quot;20&quot;/&gt;&lt;record x1=&quot;20&quot; x2=&quot;40&quot;/&gt;&lt;record x1=&quot;40&quot; x2=&quot;30&quot;/&gt;&lt;record x1=&quot;10&quot; x2=&quot;10&quot;/&gt;&lt;record x1=&quot;50&quot; x2=&quot;10&quot;/&gt;&lt;/data&gt;"/>
      <object type="jsx3.chart.ChartLabel">
        <variants labelRotation="0" jsxfontsize="14" jsxleft="0" jsxtop="0" jsxwidth="398" jsxheight="25" jsxzindex="1000"/>
        <strings jsxname="title" jsxtext="Line Chart" jsxcolor="#FFFFFF" jsxbgcolor="#666666" jsxpadding="4 0 0 0" jsxfontname="Arial" jsxfontweight="bold" jsxtextalign="center"/>
      </object>
      <object type="jsx3.chart.CategoryAxis">
        <variants horizontal="1" primary="1" showAxis="1" showLabels="1" labelGap="3" tickLength="3" minorTickDivisions="4" minorTickLength="2" numCategories="6" numSeries="2" length="243" jsxleft="39" jsxtop="0" jsxwidth="282" jsxheight="253" jsxzindex="110"/>
        <strings jsxname="xAxis" axisStroke="#000000 1 1" labelPlacement="axis" tickPlacement="outside" tickStroke="#000000 1 1" minorTickPlacement="outside" labelStyle="font-size: 8px; font-family: Verdana;" tickAlignment="between"/>
        <object type="jsx3.chart.ChartLabel">
          <variants preferredHeight="14" labelRotation="0" jsxfontsize="12" jsxleft="0" jsxtop="239" jsxwidth="243" jsxheight="14"/>
          <strings jsxname="xTitle" jsxtext="Hour" jsxfontname="Arial" jsxfontweight="bold" jsxtextalign="center"/>
        </object>
      </object>
      <object type="jsx3.chart.LinearAxis">
        <variants horizontal="0" primary="1" showAxis="1" showLabels="1" labelGap="3" tickLength="3" minorTickDivisions="4" minorTickLength="3" displayWidth="15" autoAdjust="1" baseAtZero="1" length="223" jsxleft="39" jsxtop="0" jsxwidth="282" jsxheight="253" jsxzindex="110"/>
        <strings jsxname="yAxis" axisStroke="#000000 1 1" labelPlacement="axis" tickPlacement="outside" tickStroke="#000000 1 1" minorTickPlacement="none" minorTickStroke="#000000 1 1" labelStyle="font-size: 8px; font-family: Verdana; text-align: right;"/>
        <object type="jsx3.chart.ChartLabel">
          <variants labelRotation="270" jsxfontsize="12" jsxleft="-39" jsxtop="0" jsxwidth="18" jsxheight="223"/>
          <strings jsxname="ytitle" jsxtext="Events" jsxfontname="Arial" jsxfontweight="bold" jsxtextalign="center"/>
        </object>
      </object>
      <object type="jsx3.chart.GridLines">
        <variants useXPrimary="1" useYPrimary="1" horizontalAbove="1" inForeground="0" strokeMajorH="['#DDDDDD 1 1']" strokeMinorH="['#EEEEEE 1 1']" jsxleft="39" jsxtop="0" jsxwidth="243" jsxheight="223" jsxzindex="11"/>
        <strings jsxname="grid" borderStroke="#CCCCCC 1"/>
      </object>
      <object type="jsx3.chart.LineSeries">
        <variants usePrimaryX="1" usePrimaryY="1" index="0" interpolateValues="1" jsxzindex="20" jsxleft="39" jsxtop="0" jsxwidth="243" jsxheight="223"/>
        <strings jsxname="series1" seriesName="Errors" stroke="#999999" yField="x1" form="segment" pointRenderer="jsx3.chart.PointRenderer.CIRCLE" pointFill="#FF0000" pointStroke="#990000" tooltipFunction="jsx3.chart.LineSeries.tooltip"/>
      </object>
      <object type="jsx3.chart.LineSeries">
        <variants usePrimaryX="1" usePrimaryY="1" index="1" interpolateValues="1" jsxzindex="21" jsxleft="39" jsxtop="0" jsxwidth="243" jsxheight="223"/>
        <strings jsxname="series2" seriesName="Warnings" stroke="#999999" yField="x2" form="segment" pointRenderer="jsx3.chart.PointRenderer.DIAMOND" pointFill="#FFFF00" pointStroke="#999900" tooltipFunction="jsx3.chart.LineSeries.tooltip"/>
      </object>
      <object type="jsx3.chart.Legend">
        <variants boxHeight="13" lineHeight="22" titleSpace="8" boxSpace="6" jsxleft="298" jsxtop="25" jsxwidth="100" jsxheight="273" jsxzindex="990"/>
        <strings jsxname="legend" labelStyle="font-size: 10px; font-weight: bold;" backgroundStroke="#BBBBBB" jsxmargin="10 10 10 4" jsxpadding="4 4 0 4"/>
        <object type="jsx3.chart.ChartLabel">
          <variants labelRotation="0" jsxfontsize="12" jsxleft="8" jsxtop="104" jsxwidth="78" jsxheight="18" jsxzindex="3"/>
          <strings jsxname="legendTitle" jsxtext="Legend" jsxfontname="Arial" jsxfontweight="bold" jsxtextalign="center"/>
        </object>
      </object>
    </object>
  </object>
</serialization>
