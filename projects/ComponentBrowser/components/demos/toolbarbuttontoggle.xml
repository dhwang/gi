<serialization xmlns="urn:tibco.com/v3.0" jsxversion="3.9">
  <name><![CDATA[Toggling Toolbar Button]]></name>
  <icon/>
  <description><![CDATA[This shows how to create a toolbar button that toggles on and off.]]></description>
  <onBeforeDeserialize/>
  <onAfterDeserialize><![CDATA[
this.onEnabledSelect = function(strRecordId) {
  tbToggler.setEnabled(strRecordId == "0" ? 0 : 1, true);
};


this.onStateSelect = function(strRecordId) {
  tbToggler.setState(strRecordId == "0" ? 0 : 1);
};

this.onButtonToggled = function() {
  state.setValue(tbToggler.getState());
};

enabled.setValue(tbToggler.getEnabled());
state.setValue(tbToggler.getState());
  ]]></onAfterDeserialize>
  <object type="jsx3.gui.LayoutGrid">
    <variants jsxrelativeposition="0" jsxleft="0" jsxtop="0" jsxoverflow="2"/>
    <strings jsxname="root" jsxwidth="100%" jsxheight="100%"/>
    <dynamics jsxcols="@Root Cols"/>
    <object type="jsx3.gui.Block">
      <variants jsxoverflow="2"/>
      <strings jsxname="col1" jsxwidth="100%" jsxheight="100%"/>
      <dynamics jsxborder="@Outset"/>
      <object type="jsx3.gui.WindowBar">
        <variants jsxbartype="1"/>
        <strings jsxname="toolbar"/>
        <object type="jsx3.gui.ToolbarButton">
          <variants jsxenabled="1" jsxtype="1"/>
          <strings jsxname="tbToggler" jsxtext="Toggle Me!"/>
          <events jsxchange="root.onButtonToggled();"/>
        </object>
      </object>
    </object>
    <object type="jsx3.gui.Block">
      <variants jsxoverflow="1"/>
      <strings jsxname="col2" jsxwidth="100%" jsxheight="100%"/>
      <dynamics jsxbgcolor="@Col2 Background" jsxpadding="@8Pixel"/>
      <object type="jsx3.gui.Block">
        <variants jsxfontsize="12"/>
        <strings jsxname="name" jsxwidth="100%" jsxfontweight="bold" jsxpadding="0 0 4 0"/>
      </object>
      <object type="jsx3.gui.Block">
        <variants/>
        <strings jsxname="desc" jsxwidth="100%"/>
      </object>
      <object type="jsx3.gui.Block">
        <variants/>
        <strings jsxname="hr" jsxwidth="100%" jsxtext="&lt;hr&gt;" jsxpadding="8 0 8 0"/>
      </object>
      <object type="jsx3.gui.Block">
        <variants jsxoverflow="3"/>
        <strings jsxname="properties" jsxwidth="100%" jsxrelativeposition="1"/>
        <object type="jsx3.gui.Label">
          <variants jsxrelativeposition="1" jsxoverflow="3"/>
          <strings jsxname="formLabel" jsxtext="Enabled" jsxfor="enabled" jsxfontweight="bold" jsxtextalign="left" jsxwidth="50%"/>
        </object>
        <object type="jsx3.gui.Select">
          <variants jsxheight="18" jsxxmlasync="1" jsxenabled="1" jsxvalue="1"/>
          <strings jsxname="enabled" jsxmargin="0 0 4 0" jsxxml="&lt;data jsxid=&quot;jsxroot&quot;&gt;&lt;record jsxid=&quot;0&quot; jsxtext=&quot;Disabled&quot;/&gt;&lt;record jsxid=&quot;1&quot; jsxtext=&quot;Enabled&quot;/&gt;&lt;/data&gt;" jsxwidth="50%"/>
          <events jsxselect="root.onEnabledSelect(strRECORDID);"/>
        </object>
        <object type="jsx3.gui.Label">
          <variants jsxrelativeposition="1" jsxoverflow="3"/>
          <strings jsxname="formLabel" jsxtext="State" jsxfor="state" jsxfontweight="bold" jsxtextalign="left" jsxwidth="50%"/>
        </object>
        <object type="jsx3.gui.Select">
          <variants jsxheight="18" jsxxmlasync="1" jsxvalue="0"/>
          <strings jsxname="state" jsxmargin="0 0 4 0" jsxxml="&lt;data jsxid=&quot;jsxroot&quot;&gt;&lt;record jsxid=&quot;0&quot; jsxtext=&quot;Off&quot;/&gt;&lt;record jsxid=&quot;1&quot; jsxtext=&quot;On&quot;/&gt;&lt;/data&gt;" jsxwidth="50%"/>
          <events jsxselect="root.onStateSelect(strRECORDID);"/>
        </object>
      </object>
    </object>
  </object>
</serialization>
